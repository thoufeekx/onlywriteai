# Multi-stage build for production frontend
FROM node:18-alpine AS builder

# Accept build-time arguments for public environment variables
ARG NEXT_PUBLIC_ONLYOFFICE_URL
ARG NEXT_PUBLIC_APP_URL

# Set them as environment variables for the build process
ENV NEXT_PUBLIC_ONLYOFFICE_URL=$NEXT_PUBLIC_ONLYOFFICE_URL
ENV NEXT_PUBLIC_APP_URL=$NEXT_PUBLIC_APP_URL

WORKDIR /app

# Copy package files first for better caching
COPY package*.json ./

# Install dependencies
# Cache buster: 1 (including devDependencies for build)
RUN npm ci --silent

# Copy source code
COPY . .


# Copy the source document to the documents directory
RUN mkdir -p /app/documents
COPY source/OnlyWriteAI.docx /app/documents/OnlyWriteAI.docx

# Build the application
RUN npm run build

# Production stage
FROM node:18-alpine AS runner

WORKDIR /app

# Create non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy documents directory to runtime
COPY --from=builder /app/documents ./documents

# Copy built application

COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static
COPY --from=builder /app/public ./public

# Set ownership
RUN chown -R nextjs:nodejs /app/documents  


RUN chown -R nextjs:nodejs /app

USER nextjs

# Expose port
EXPOSE 3000

# Set environment
ENV NODE_ENV=production
ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# Start the application
CMD ["node", "server.js"]
